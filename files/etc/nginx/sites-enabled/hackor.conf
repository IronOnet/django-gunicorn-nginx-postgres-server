upstream wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server unix:/webapps/hackor/run/gunicorn.sock fail_timeout=30;
}

root /webapps/hackor/hackor/collected-static/;

# # force https for all GET requests
# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     server_name totalgood.org www.totalgood.org;
#     return 301 https://$server_name$request_uri;
# }


server {
    listen      80;
    listen      443 ssl;
    server_name         totalgood.org www.totalgood.org;

    location /.well-known/acme-challenge {
        autoindex on;
        allow all;
        root /var/www/letsencrypt;
    }

    location /index.htm {
            alias /webapps/hackor/hackor/collected-static/index.html;
    }

    location /index.html {
        alias /webapps/hackor/hackor/collected-static/index.html;
    }

    # location ^/$ {
    #   autoindex on;
    #   alias /webapps/hackor/hackor/collected-static/index.html;
    # }

    # ssl_certificate     <path_to_your_certs>;
    # ssl_certificate_key <path_to_your_certs>;

    ssl_certificate <path_to_your_certs>;
    ssl_certificate_key <path_to_your_certs>;

    client_max_body_size 4G;

    access_log /webapps/hackor/logs/nginx_access.log;
    error_log /webapps/hackor/logs/nginx_error.log info;

    location /static {
        autoindex on;
        alias   /webapps/hackor/hackor/collected-static/;
    }

    location /2.718281828 {
        autoindex on;
        alias   /webapps/hackor/hidden-static/;
    }

    location /media {
        alias   /webapps/hackor/hackor/media/;
    }

    location = / {
        try_files /index.html =404;
    }

    location / {

        if (-f /webapps/hackor/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        alias   /webapps/hackor/hackor/collected-static/;
        autoindex on;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://wsgi_server;
            break;
        }

    location /monit {
        proxy_pass http://192.168.11.6:80;
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root /webapps/hackor/hackor/hackor/templates/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root /webapps/hackor/;
    }
}}